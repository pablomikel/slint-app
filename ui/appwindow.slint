import {  VerticalBox, HorizontalBox, TabWidget, Palette, ScrollView } from "std-widgets.slint";
import {Button} from "./components/Button.slint";
import "./fonts/GeistMono/GeistMono-Black.otf";
import "./fonts/GeistMono/GeistMono-Bold.otf";
import "./fonts/GeistMono/GeistMono-Light.otf";
import "./fonts/GeistMono/GeistMono-Medium.otf";
import "./fonts/GeistMono/GeistMono-Regular.otf";
import "./fonts/GeistMono/GeistMono-SemiBold.otf";
import "./fonts/GeistMono/GeistMono-Thin.otf";
import "./fonts/GeistMono/GeistMono-UltraBlack.otf";
import "./fonts/GeistMono/GeistMono-UltraLight.otf";

component StateTest {

    states [
        pressed when b1.pressed: {
            box.background: green;
            circle.x: 90px;
        }
    ]

    VerticalBox {
        spacing: 16px;
        box := Rectangle {
            background: blue;
            border-radius: 2px;
            padding: 16px;
            width: 100px;
            height: 100px;
            animate background {
                duration: 250ms;
                easing: ease-in-out;
            }

            circle := Rectangle {
                background: red;
                border-radius: 5px;
                padding: 16px;
                width: 10px;
                height: 10px;
                animate x {
                    duration: 250ms;
                    easing: ease-in-out;
                }
                animate y {
                    duration: 250ms;
                    easing: ease-in-out;
                }
            }
        }

        b1 := Button {
            text: "Click me!";
        }
    }
}

export component AppWindow inherits Window {
    no-frame: false;
    title: "Slint";
    default-font-family: "Geist Mono";
    background: #0d0d0d;
    padding: 16px;
    in-out property <int> counter: 42;
    callback request-increase-value();
    callback request-decrease-value();

    property <[string]> items: [
        "Item 1",
        "Item 2",
        "Item 3",
        "Item 4",
        "Item 5",
        "Item 6",
        "Item 7",
        "Item 8",
        "Item 9",
        "Item 10"
    ];

    TabWidget {
        vertical-stretch: 1;
        horizontal-stretch: 1;
        current-index: 2;

        Tab {
            title: "Counter";
            VerticalBox {

                HorizontalBox {
                    alignment: stretch;
                    horizontal-stretch: 1;
                    vertical-stretch: 1;

                    Rectangle {
                        vertical-stretch: 1;
                        horizontal-stretch: 1;
                        border-radius: 2px;
                        background: rgba(255, 255, 255, 0.1);
                        HorizontalBox {
                            vertical-stretch: 1;
                            horizontal-stretch: 1;
                            alignment: start;
                            Text {
                                color: rgba(255,255,255,0.75);
                                vertical-stretch: 0;
                                text: "Counter: \{root.counter}";
                            }
                        }
                    }
                }

                HorizontalBox {
                    vertical-stretch: 0;
                    Button {
                        vertical-stretch: 0;

                        text: "Decrease value";
                        clicked => {
                            root.request-decrease-value();
                        }
                    }

                    Button {
                        vertical-stretch: 0;

                        text: "Increase value";
                        clicked => {
                            root.request-increase-value();
                        }
                    }
                }
            }
        }

        Tab {
            title: "Animation test";
            StateTest { }
        }

        Tab {
            title: "Items";
            ScrollView {
                viewport-height: items.length * 40px;
                VerticalBox {
                    spacing: 0px;
                    for item in items: area := TouchArea {
                        Rectangle {
                            border-radius: 6px;
                            height: 40px;
                            background: area.has-hover ? rgba(255, 255, 255, 0.05) : rgba(255, 255, 255, 0);
                            animate background {
                                duration: 150ms;
                                easing: ease-in-out;
                            }
                            Text {
                                text: item;
                                color: rgba(255,255,255,0.75);
                            }
                        }
                    }
                }
            }
        }
    }
}
